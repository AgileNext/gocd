/*
 * Copyright 2018 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

const m = require("mithril");
const _ = require("lodash");
const f = require("helpers/form_helper");

const ReposList = {
  view(vnode) {
    const vm = vnode.attrs.vm;

    return <section class="repo-list">
      <h1>Config Header</h1>
      <ul>
      {
        vm.repos().map((repo) => {
          return <ConfigRepo vm={repo}/>;
        })
      }
      </ul>
    </section>;
  }
};

const ConfigRepo = {
  view(vnode) {
    const vm = vnode.attrs.vm;

    return <li>
      <h3>{vm.type()} repo: {vm.id()}</h3>
      <h5>Plugin: {vm.pluginId()}</h5>
      <ActionBar vm={vm}/>
      <GitRepo vm={vm}/>
    </li>;
  }
};

const ActionBar = {
  view(vnode) {
    const vm = vnode.attrs.vm;
    if (vm.editMode()) {
      return [<button onclick={() => vm.exitEditMode()}>Cancel</button>,<button onclick={() => vm.save()}>Save</button>];
    } else {
      return [<button onclick={() => vm.enterEditMode()}>Edit</button>, <button onclick={() => vm.remove()}>Delete</button>];
    }
  }
};

const GitRepo = {
  view(vnode) {
    const vm = vnode.attrs.vm;
    if (vm.editModel()) {
      const editModel = vm.editModel();
      return <div>{_.map(editModel, (v, k) =>
        m("boolean" === typeof v() ? f.checkbox : f.input, {
          model: editModel,
          attrName: k,
          label: k
        })
      )}</div>;

    }
    return <table>
      {_.map(vm.attributes(), (v, k) => <tr><td>{k}</td><td>{v}</td></tr>)}
    </table>;
  }
};

module.exports = ReposList;
